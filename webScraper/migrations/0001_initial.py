# Generated by Django 4.1 on 2022-10-12 11:34

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=128)),
                ('google_id', models.CharField(default=' ', max_length=128, null=True)),
                ('google_business_types', models.CharField(default=' ', max_length=128, null=True)),
                ('notes', models.TextField(max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection_Year',
            fields=[
                ('year', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Local_Government',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_government_area', models.CharField(max_length=128)),
                ('food_retail', models.IntegerField(default=0)),
                ('food_service', models.IntegerField(default=0)),
                ('CHARITABLE_FOOD_PROVISION', models.IntegerField(default=0)),
                ('FOOD_PRODUCTION_AND_PREPARATION', models.IntegerField(default=0)),
                ('INSTITUTIONAL_FOOD', models.IntegerField(default=0)),
                ('ACCOMMODATION_RECREATION_SERVICES', models.IntegerField(default=0)),
                ('Supermarket_grocery_store', models.IntegerField(default=0)),
                ('Convenience_store', models.IntegerField(default=0)),
                ('World_ethnic_food_store', models.IntegerField(default=0)),
                ('Health_food_store', models.IntegerField(default=0)),
                ('Butcher_poultry_store', models.IntegerField(default=0)),
                ('Fishmonger', models.IntegerField(default=0)),
                ('Bakery', models.IntegerField(default=0)),
                ('Fruit_and_vegetable_store_greengrocer', models.IntegerField(default=0)),
                ('Delicatessen', models.IntegerField(default=0)),
                ('Cake_or_pastry_shop_patisserie', models.IntegerField(default=0)),
                ('Confectionery_chocolate_icecream', models.IntegerField(default=0)),
                ('Other_specialist_food_outlet', models.IntegerField(default=0)),
                ('Liquor_merchant_bottle_shop', models.IntegerField(default=0)),
                ('business_as_secondary_classification', models.IntegerField(default=0)),
                ('General_retail', models.IntegerField(default=0)),
                ('Caf√©_coffee_shop', models.IntegerField(default=0)),
                ('Restaurant', models.IntegerField(default=0)),
                ('Fast_casual_quick_service_takeaway', models.IntegerField(default=0)),
                ('Licensed_liquor_venue', models.IntegerField(default=0)),
                ('Kiosk', models.IntegerField(default=0)),
                ('Mobile_food_or_coffee_van_truck_venue', models.IntegerField(default=0)),
                ('Food_market_venue', models.IntegerField(default=0)),
                ('Emergency_food_provision_groceries', models.IntegerField(default=0)),
                ('Emergency_food_provision_meals', models.IntegerField(default=0)),
                ('Meal_preparation_and_delivery', models.IntegerField(default=0)),
                ('Home_based_catering_business_kitchens_or_cooking_classes', models.IntegerField(default=0)),
                ('Food_truck_coffee_or_other_drinks_van', models.IntegerField(default=0)),
                ('Meal_grocery_delivery_service', models.IntegerField(default=0)),
                ('Food_manufacturer_processor', models.IntegerField(default=0)),
                ('Producer_packer_distributor', models.IntegerField(default=0)),
                ('Hospitals', models.IntegerField(default=0)),
                ('Residential_care', models.IntegerField(default=0)),
                ('Defence', models.IntegerField(default=0)),
                ('Correctional', models.IntegerField(default=0)),
                ('Corporate_workplace', models.IntegerField(default=0)),
                ('Education', models.IntegerField(default=0)),
                ('Childcare', models.IntegerField(default=0)),
                ('Community_church_hall_function_centre', models.IntegerField(default=0)),
                ('Residential_worksite', models.IntegerField(default=0)),
                ('Other_institutional', models.IntegerField(default=0)),
                ('Entertainment_venue', models.IntegerField(default=0)),
                ('Health_and_leisure_venue', models.IntegerField(default=0)),
                ('Accommodation_with_food', models.IntegerField(default=0)),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webScraper.collection_year')),
            ],
        ),
        migrations.CreateModel(
            name='Contact_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longitude', models.DecimalField(decimal_places=7, default=-31.9524993, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=7, default=115.8612164, max_digits=10, null=True)),
                ('parcel_address', models.CharField(default='', max_length=128, null=True)),
                ('formatted_address', models.CharField(default='', max_length=128, null=True)),
                ('phone_mobile', models.CharField(default='', max_length=15, null=True)),
                ('website', models.CharField(default='', max_length=128, null=True)),
                ('email', models.CharField(default='', max_length=128, null=True)),
                ('menu', models.BooleanField(default=False, null=True)),
                ('opening_hours', models.JSONField(default=dict, null=True)),
                ('business_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='webScraper.business')),
            ],
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('possible_classifications', models.CharField(default='None', max_length=128, null=True)),
                ('classification', models.CharField(choices=[('-', '------------'), ('A', 'Food Retail'), ('B', 'Food Service'), ('C', 'Charitable Food Provisions'), ('D', 'Food Productiond and Preperation'), ('E', 'Institutional Food'), ('F', 'Accomadation and Recreation')], default='None', max_length=1, null=True)),
                ('possible_categories', models.CharField(default='None', max_length=128, null=True)),
                ('category_one', models.CharField(choices=[('-', '------------'), ('--', '---- Food Retail ----'), ('A1.00', 'Supermarket/Grocery Store'), ('A2.00', 'Convenience Store'), ('A3.00', 'World/Ethnic Foods'), ('A4.00', 'Health Food Store'), ('A5.00', 'Butcher/Poultry Store'), ('A6.00', 'Fishmonger'), ('A7.00', 'Bakery'), ('A8.00', 'Fruit and Veg / Greengrocer'), ('A9.00', 'Delicatessen'), ('A10.00', 'Pastry/Patisserie Store'), ('A11.00', 'Confectionary/Chocolate/Ice-Cream'), ('A12.00', 'Not otherwise specified'), ('A13.00', 'Liquor/Bottle Shop'), ('A14.00', 'General Retail'), ('---', '---- Food Service ----'), ('B01.00', 'Restaurant'), ('B02.00', 'Cafe/Coffee shop'), ('B03.00', 'Fast Casual/Quick Service/Takeaway'), ('B04.00', 'Licensed Liquor Venue'), ('B05.00', 'Kiosk'), ('B06.00', 'Mobile food or coffee van/truck venue'), ('B07.00', 'Food Market Venue'), ('----', '---- Charitable Food Provison ----'), ('C01.00', 'Emergency food provision - groceries'), ('C02.00', 'Emergency food provision - meals'), ('C03.00', 'Meal preparation and delivery'), ('-----', '--- Food Production and Preparation ---'), ('D01.00', 'Home-Based Catering Business/Kitchens or Cooking Classes'), ('D02.00', 'Food Truck / Coffee or other Drinks Van'), ('D03.00', 'Meal / Grocery Delivery Service'), ('D04.00', 'Food Manufacturer / Processor'), ('D05.00', 'Producer / Packer / Distributor'), ('------', '--- Institutional Food ---'), ('E01.00', 'Hospitals'), ('E02.00', 'Residential Care'), ('E03.00', 'Defence'), ('-------', '--- Accommodation / Recreation Services ---'), ('F01.00', 'Health and Leisure Venue'), ('F02.00', 'Accommodatin with Food')], default='None', max_length=16, null=True)),
                ('sub_cat_one', models.CharField(choices=[('-', '------------'), ('--', '--- Supermarket/Grocery Store ---'), ('A1.01', 'Supermarket'), ('A1.02', 'Discount Grocery Store'), ('A1.03', 'Wholesale Grocery Store'), ('---', '--- Convenience Store ---'), ('A2.01', 'Petrol Station Store'), ('A2.02', 'Milk Bar / Corner Store'), ('A2.03', 'Other Convenience Store'), ('----', '--- Health Food Store ---'), ('A4.01', 'With Shop Front'), ('A4.02', 'No Shop Front'), ('-----', '--- Liquor Merchant / Bottle Shop ---'), ('A13.01', 'With Shop Front'), ('A13.02', 'No Shop Front'), ('------', '--- Restaurant ---'), ('B2.01', 'Modern Austrlia'), ('B2.02', 'American'), ('B2.03', 'British'), ('B2.04', 'Caribbean'), ('B2.05', 'Chinese'), ('B2.06', 'Indian'), ('B2.07', 'Italian'), ('B2.08', 'Vietnamese'), ('B2.09', 'Thai'), ('B2.10', 'Japanese'), ('B2.11', 'Indonesian'), ('B2.12', 'Malaysian'), ('B2.13', 'African'), ('B2.14', 'Mexican'), ('B2.15', 'Lebanese'), ('B2.16', 'Turkish'), ('B2.17', 'Greek'), ('B2.18', 'French'), ('B2.19', 'Mediterranean'), ('B2.20', 'Spanish'), ('B2.21', 'Moroccan'), ('B2.22', 'Nepalese'), ('B2.23', 'Korean'), ('B2.24', 'Cantonese'), ('B2.25', 'Fillipino'), ('B2.26', 'Mixed Asian Fusion'), ('B2.27', 'Singaporean'), ('B2.28', 'Taiwanese'), ('B2.29', 'Egyptian'), ('B2.30', 'German'), ('B2.31', 'Cambodian'), ('B2.32', 'Persian'), ('B2.33', 'Multiple Cuisines'), ('B2.34', 'Afgan'), ('B2.35', 'Polish'), ('B2.36', 'Modern Australian - Grill'), ('B2.37', 'Modern Australian - Cavery'), ('B2.38', 'South American'), ('B2.39', 'Irish'), ('B2.40', 'Polynesian'), ('-------', '--- Fast Causal / Quick Service / Takeaway ---'), ('B3.01', 'Burgers'), ('B3.02', 'Roast / BQQ Chicken'), ('B3.03', 'Fried Chicken'), ('B3.04', 'Hot Chips'), ('B3.05', 'Pizza'), ('B3.06', 'Kebab / Gozleme'), ('B3.07', 'Fish and Chips'), ('B3.08', 'Pretzel'), ('B3.09', 'Sushi'), ('B3.10', 'Sandwich'), ('B3.11', 'Salad'), ('B3.12', 'Pies'), ('B3.13', 'Cavery'), ('B3.14', 'Hotdog'), ('B3.15', 'Cakes / Pastry / Biscuits'), ('B3.16', 'Ice-Cream / Frozen Yogurt'), ('B3.17', 'Juice / Smoothies / Shakes'), ('B3.18', 'Bubble Tea'), ('B3.19', 'Taco / Burrito / Nacho'), ('B3.20', 'Asian / Noodles'), ('B3.21', 'Coffee'), ('B3.22', 'Curry'), ('B3.23', 'Pasta'), ('B3.24', 'Multiple Food Types'), ('B3.25', 'Waffles / Pancakes / Crepes'), ('B3.26', 'Vegan'), ('B3.27', 'McDonalds'), ('B3.28', 'KFC'), ('B3.29', 'Dominos'), ('B3.30', 'Hungry Jacks'), ('B3.31', 'Subway'), ('B3.32', 'Red Rooster'), ('--------', '--- Licensed Liquor Venue ---'), ('B4.01', 'Serves Food'), ('B4.02', 'No Food Served, only bar snacks'), ('---------', '--- Charitable Food Provision ---'), ('D4.01', 'Manufacturer of high-risk foods'), ('D2.02', 'Manufacturer of medium-risk foods'), ('D4.03', 'Manufacturer of low-risk foods'), ('D4.04', 'Alcohol / Beverages'), ('----------', '--- Producer / Packer / Distributor ---'), ('D5.01', 'Packer / Storage'), ('D5.02', 'Distributor'), ('D5.03', 'Producer'), ('-----------', '--- Education ----'), ('E6.01', 'Primary School'), ('E6.02', 'High School'), ('E6.03', 'TAFE / University'), ('E6.04', 'Kindergarten to Year 12'), ('E6.05', 'Other Education'), ('------------', '--- Sports / Exercise / Play ---'), ('F2.01', 'Sports / Exercise / Play'), ('F2.02', 'Member-based clubs'), ('F2.03', 'Other clubs'), ('-------------', '--- Accommodation ---'), ('F3.01', 'Includes Restaurant / Cafe / Room Service'), ('F3.02', 'Function Rooms Only'), ('F3.03', 'No Restaurant / Cafe / Room Service')], default='None', max_length=16, null=True)),
                ('business_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='webScraper.business')),
            ],
        ),
        migrations.AddField(
            model_name='business',
            name='local_government_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webScraper.local_government'),
        ),
    ]
